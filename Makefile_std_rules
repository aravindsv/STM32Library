# MCU Flags
MCFLAGS=-mcpu=cortex-m4 -mthumb -mlittle-endian \
-mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb-interwork
# COMPILE FLAGS
DEFS=-DSTM32F4XX
CFLAGS=-c $(MCFLAGS) $(DEFS) $(INCLUDES)
CXXFLAGS=-c $(MCFLAGS) $(DEFS) $(INCLUDES) -std=c++11
LDFLAGS =-T $(LDSCRIPT) $(MCFLAGS) --specs=nosys.specs $(INCLUDES_LIBS) $(LINK_LIBS) -g

#############################

# Build Rules
.PHONY: all release debug clean flash

all: release

release: $(BINDIR)/$(BINHEX) $(BINDIR)/$(BINBIN)

$(BINDIR)/$(BINHEX): $(BINDIR)/$(BINELF)
	$(CP) -O ihex $< $@
	@echo "Objcopy from ELF to  IHEX complete!\n"

$(BINDIR)/$(BINBIN): $(BINDIR)/$(BINELF)
	$(CP) -O binary $< $@
	@echo "Objcopy from ELF to BIN complete!\n"

$(BINDIR)/$(BINELF): $(OBJECTS)
	$(CXX) -g $(OBJECTS) $(LDFLAGS) -o $@
	@echo "Linking complete!\n"
	$(SIZE) $(BINDIR)/$(BINELF)

%.o: %.cpp
	$(CXX) -g $(CXXFLAGS) $< -o $@

%.o: %.c
	$(CC) -g $(CFLAGS) $< -o $@

%.o: %.s
	$(CC) -g $(CFLAGS) $< -o $@

%.o: %.S
	$(CC) -g $(CFLAGS) $< -o $@

clean:
	rm -f $(OBJECTS) $(BINDIR)/$(BINELF) $(BINDIR)/$(BINHEX) $(BINDIR)/$(BINBIN) $(BINDIR)/output.map

flash: $(BINDIR)/$(BINBIN)
	~/Development/stlink/st-flash write $(BINDIR)/$(BINBIN) 0x8000000